package telran.homework.algorithms;

public class HW7 {

    // ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILXCZHiL6kRLD5LCPErJDjwyAjboZO8m1V86RAe4ykDO nico@it-nico.de



    /*
    Хеш-функции находят применение во множестве областей реальной жизни благодаря их свойству преобразовывать данные в фиксированную длину, часто с целью обеспечения безопасности, повышения производительности и упрощения обработки данных. Вот несколько примеров:

Криптография и безопасность:

Хранение паролей: Пароли пользователей обычно хранятся в зашифрованном виде с использованием хеш-функций. Например, при регистрации пользователя пароль хэшируется, и в базе данных сохраняется только его хеш. При входе пользователя, введенный пароль снова хэшируется и сравнивается с сохраненным хешем.
Цифровые подписи: Хеш-функции используются для создания цифровых подписей, которые подтверждают подлинность и целостность электронных документов и сообщений. Это особенно важно в юридических и финансовых транзакциях.
Поиск и индексация данных:

Хеш-таблицы: В компьютерных науках хеш-таблицы применяются для эффективного поиска, вставки и удаления данных. Они используются в базах данных, кэшах и структурах данных для ускорения доступа к информации.
Поисковые системы: Поисковые системы используют хеш-функции для быстрого поиска и индексации веб-страниц, помогая пользователям быстро находить нужную информацию.
Файловые системы и контроль целостности данных:

Контрольные суммы и хеш-суммы: Хеш-функции применяются для вычисления контрольных сумм файлов и данных, чтобы проверить их целостность и обнаружить ошибки при передаче данных или их хранении. Примеры включают MD5 и SHA-256.
Системы контроля версий: Инструменты контроля версий, такие как Git, используют хеш-функции для идентификации изменений в файлах и управления версиями кода.
Обнаружение дубликатов и уникальных данных:

Антиспам-фильтры: Хеш-функции помогают в распознавании и фильтрации спама путем хеширования содержимого писем и их сравнения с известными хешами спам-сообщений.
Обнаружение дубликатов: В системах хранения данных, таких как облачные хранилища, хеш-функции помогают выявлять и устранять дубликаты файлов, экономя пространство.
Идентификация и аутентификация:

UUID (Универсально уникальные идентификаторы): Хеш-функции используются для создания уникальных идентификаторов, которые применяются для идентификации объектов, транзакций и других сущностей в информационных системах.
Ключи API: Хеш-функции помогают в создании и проверке ключей API, которые используются для контроля доступа к веб-сервисам и API.

     */


}
